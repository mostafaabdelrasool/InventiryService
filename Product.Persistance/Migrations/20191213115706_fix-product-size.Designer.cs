// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Product.Persistance;

namespace Product.Persistance.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20191213115706_fix-product-size")]
    partial class fixproductsize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Product.Domain.Aggregate.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("image");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName")
                        .HasName("CategoryName");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Product.Domain.Aggregate.ProductSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Dimensions");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductId");

                    b.Property<int?>("ProductsId");

                    b.Property<string>("Size");

                    b.Property<int>("UnitInStock");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ProductSizes");
                });

            modelBuilder.Entity("Product.Domain.Aggregate.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnName("CategoryID");

                    b.Property<decimal?>("CostPrice");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("Discontinued");

                    b.Property<decimal?>("Discount");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("QuantityPerUnit")
                        .HasMaxLength(20);

                    b.Property<short?>("ReorderLevel")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<decimal?>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("UnitsInStock")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("UnitsOnOrder")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("image");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .HasName("CategoryID");

                    b.HasIndex("ProductName")
                        .HasName("ProductName");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Product.Domain.Aggregate.ProductSize", b =>
                {
                    b.HasOne("Product.Domain.Aggregate.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Products_ProductSizes")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Product.Domain.Aggregate.Products")
                        .WithMany("ProductSizes")
                        .HasForeignKey("ProductsId");
                });

            modelBuilder.Entity("Product.Domain.Aggregate.Products", b =>
                {
                    b.HasOne("Product.Domain.Aggregate.Categories", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Products_Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
